import '../models/note.dart';

class NoteRepository {
  List<Note> dummyNotes = [
    Note(
      id: '1',
      title: 'Grocery List',
      content: null,
      todoItems: [
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy eggs', isCompleted: true),
        TodoItem(task: 'Buy bread', isCompleted: true),
      ],
      createdBy: 'user123',
      isPinned: true,
      color: '',
      createdAt: DateTime.now().subtract(const Duration(days: 2)),
      updatedAt: DateTime.now().subtract(const Duration(days: 1)),
      collaborators: ['user124', 'user125'],
      reminder: DateTime.now().add(const Duration(days: 1)),
      tags: ['shopping', 'personal', 'groceries', 'food'],
      isArchived: false,
      imageUrls: [
        'https://example.com/image1.jpg',
        'https://example.com/image2.jpg',
      ],
      isTodo: true,
    ),
    Note(
      id: '2',
      title: 'Project Ideas',
      content:
          'Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas Brainstorming for new app ideas... ðŸ¤”',
      todoItems: null,
      createdBy: 'user123',
      isPinned: false,
      color: '0xFFAED581',
      createdAt: DateTime.now().subtract(const Duration(days: 5)),
      updatedAt: DateTime.now().subtract(const Duration(days: 3)),
      collaborators: ['user124'],
      reminder: null,
      tags: ['work', 'ideas'],
      isArchived: false,
      imageUrls: [],
      isTodo: false,
    ),
    Note(
      id: '3',
      title: 'Meeting Notes',
      content: 'Discussed project milestones and deadlines.',
      todoItems: null,
      createdBy: 'user124',
      isPinned: false,
      color: '0xFFFF8A65',
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
      updatedAt: DateTime.now(),
      collaborators: ['user123'],
      reminder: DateTime.now().add(const Duration(hours: 2)),
      tags: ['meeting', 'work'],
      isArchived: false,
      imageUrls: ['https://example.com/image3.jpg'],
      isTodo: false,
    ),
    Note(
      id: '4',
      title: 'Vacation Plans',
      content: 'Looking for flights and accommodation options.',
      todoItems: null,
      createdBy: 'user125',
      isPinned: true,
      color: '0xFF9575CD',
      createdAt: DateTime.now().subtract(const Duration(days: 10)),
      updatedAt: DateTime.now().subtract(const Duration(days: 8)),
      collaborators: [],
      reminder: null,
      tags: ['vacation', 'personal'],
      isArchived: true,
      imageUrls: [],
      isTodo: false,
    ),

    // more notes...
    Note(
      id: '5',
      title: 'Grocery List',
      content: null,
      todoItems: [
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy milk', isCompleted: false),
        TodoItem(task: 'Buy eggs', isCompleted: true),
        TodoItem(task: 'Buy bread', isCompleted: true),
      ],
      createdBy: 'user123',
      isPinned: true,
      color: '',
      createdAt: DateTime.now().subtract(const Duration(days: 2)),
      updatedAt: DateTime.now().subtract(const Duration(days: 1)),
      collaborators: ['user124', 'user125'],
      reminder: DateTime.now().add(const Duration(days: 1)),
      tags: ['shopping', 'personal', 'groceries', 'food'],
      isArchived: false,
      imageUrls: [
        'https://example.com/image1.jpg',
        'https://example.com/image2.jpg',
      ],
      isTodo: true,
    ),
    Note(
      id: '6',
      title: 'Project Ideas',
      content:
          'Mobile App Development',
      todoItems: null,
      createdBy: 'user123',
      isPinned: false,
      color: '0xFFAED581',
      createdAt: DateTime.now().subtract(const Duration(days: 5)),
      updatedAt: DateTime.now().subtract(const Duration(days: 3)),
      collaborators: ['user124'],
      reminder: null,
      tags: ['work', 'ideas'],
      isArchived: false,
      imageUrls: [],
      isTodo: false,
    ),
    Note(
      id: '7',
      title: 'Meeting Notes',
      content: 'Discussed project milestones and deadlines.',
      todoItems: null,
      createdBy: 'user124',
      isPinned: false,
      color: '0xFFFF8A65',
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
      updatedAt: DateTime.now(),
      collaborators: ['user123'],
      reminder: DateTime.now().add(const Duration(hours: 2)),
      tags: ['meeting', 'work'],
      isArchived: false,
      imageUrls: ['https://example.com/image3.jpg'],
      isTodo: false,
    ),
  ];

  Future<List<Note>> fetchNotes() async {
    // Simulate network delay
    await Future.delayed(const Duration(milliseconds: 500));
    return dummyNotes;
  }
}
